def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
// START: FlutterFire Configuration
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
// END: FlutterFire Configuration
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    namespace "com.flutter.flutter.flutter_app"
    compileSdkVersion 34
    ndkVersion "25.1.8937393"

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.ducle.base"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion 23
        targetSdkVersion 34
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true


    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
            shrinkResources false
        }
    }
    splits {
        abi {
            enable true
            reset()
            include 'x86', 'x86_64', 'armeabi', 'armeabi-v7a', 'mips', 'mips64', 'arm64-v8a'
            universalApk true
        }
    }

    flavorDimensions "flavor-type"
    productFlavors {
        develop {
            dimension "flavor-type"
            applicationId "com.ducle.base.dev"
            manifestPlaceholders = [appName: "Flutter CleanArchitechture(dev)"]
        }
        staging {
            dimension "flavor-type"
            applicationId "com.ducle.base.stag"
            manifestPlaceholders = [appName: "Flutter CleanArchitechture(stg)"]
        }
        production {
            dimension "flavor-type"
            manifestPlaceholders = [appName: "Flutter CleanArchitechture"]
        }
    }
}

flutter {
    source '../..'
}

def getGoogleServicesFilePath() {
    switch (getGradle().getStartParameter().getTaskRequests().toString()) {
        case ~/.*develop.*/:
            return "$rootDir/app/src/develop/google-services.json"
        case ~/.*staging.*/:
            return "$rootDir/app/src/staging/google-services.json"
        default:
            return "$rootDir/app/src/production/google-services.json"
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.google.firebase:firebase-messaging:24.0.2'
    implementation platform('com.google.firebase:firebase-bom:33.4.0')
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'androidx.window:window:1.0.0'
    implementation 'androidx.window:window-java:1.0.0'
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.2.2'
}
